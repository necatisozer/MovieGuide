apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion Dependencies.compileSdkVersion
    buildToolsVersion Dependencies.buildToolsVersion

    defaultConfig {
        applicationId "com.esoxjem.movieguide"
        minSdkVersion Dependencies.minSdkVersion
        targetSdkVersion Dependencies.targetSdkVersion
        versionCode Dependencies.versionCode
        versionName Dependencies.versionName

        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""
        buildConfigField "String", "ENCODED_LICENCE_KEYS", "\"${getProperty("local.properties", "encoded_licence_keys")}\""
        buildConfigField "String", "ENCRYPTION_KEY", "\"${getProperty("local.properties", "encryption_key")}\""
        buildConfigField "String", "TMDB_BASE_URL", "\"http://api.themoviedb.org/\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin
    implementation Libs.kotlin_std
    implementation Libs.kotlin_reflect

    //Support
    implementation Libs.appcompat
    implementation Libs.support
    implementation Libs.design
    implementation Libs.palattte

    // Rx
    implementation Reactive.rxJava2
    implementation Reactive.rxAndroid

    // Network
    implementation Square.okhttp
    implementation Square.okhttp_intercepter
    implementation Glide.glide
    implementation Glide.glideOkhttp3integration

    // Other
    implementation Square.moshi
    implementation Square.butterKnife
    kapt Square.butterKnifeCompiler

    // Dependency Injection
    implementation Di.dagger
    implementation Di.dagger_android
    implementation Di.dagger_android_support
    kapt Di.dagger_compiler
    kapt Di.dagger_android_processor

    // Retrofit 2
    implementation Square.retrofit
    implementation Square.rxadapter
    implementation Square.moshi_retrofit

    // Tests
    testImplementation TestLibs.junit
    androidTestImplementation TestLibs.runner
    testImplementation TestLibs.mockito
    testImplementation TestLibs.mockito_kotlin
    androidTestImplementation TestLibs.espresso
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
repositories {
    mavenCentral()
}
